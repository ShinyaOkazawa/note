import{_ as s,c as n,o as e,a as i}from"./app-Bbo1zVEQ.js";const a={},l=i(`<h1 id="import-のファイルパス補完には-tsconfig-の設定が必要" tabindex="-1"><a class="header-anchor" href="#import-のファイルパス補完には-tsconfig-の設定が必要"><span>import のファイルパス補完には tsconfig の設定が必要</span></a></h1><p>Vite 環境、VSCode でコーディングするときに、パスの補完がされないと自力で相対パスを書かないといけないので面倒すぎる。</p><p>必要な設定は2つ。</p><p>vite 設定 の resolve.alias に解決したいパスを指定。</p><div class="language-vite.config.mjs line-numbers-mode" data-highlighter="prismjs" data-ext="vite.config.mjs" data-title="vite.config.mjs"><pre><code><span class="line">export default defineConfig({</span>
<span class="line">  plugins: [vue()],</span>
<span class="line">  resolve: {</span>
<span class="line">    alias: {</span>
<span class="line">      &#39;@&#39;: fileURLToPath(new URL(&#39;./src&#39;, import.meta.url))</span>
<span class="line">    }</span>
<span class="line">  }</span>
<span class="line">})</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>tsconfig.json の compilarOptions.paths にもパスを指定。</p><div class="language-tsconfig.json line-numbers-mode" data-highlighter="prismjs" data-ext="tsconfig.json" data-title="tsconfig.json"><pre><code><span class="line">{</span>
<span class="line">  &quot;compilerOptions&quot;: {</span>
<span class="line">    &quot;baseUrl&quot;: &quot;.&quot;,</span>
<span class="line">    &quot;paths&quot;: {</span>
<span class="line">      &quot;@/*&quot;: [&quot;src/*&quot;]</span>
<span class="line">    },</span>
<span class="line">  },</span>
<span class="line">  &quot;exclude&quot;: [&quot;node_modules&quot;]</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>これで <code>@</code> まで入力すれば、src ディレクトリ配下のパスを候補として挙げてくれる。</p>`,8),t=[l];function c(d,p){return e(),n("div",null,t)}const o=s(a,[["render",c],["__file","202408112150.html.vue"]]),v=JSON.parse(`{"path":"/posts/202408112150.html","title":"import のファイルパス補完には tsconfig の設定が必要","lang":"ja","frontmatter":{"date":"2024-08-11T00:00:00.000Z","category":["Front-End"],"tag":["Vite"]},"headers":[],"git":{"updatedTime":1723381592000,"contributors":[{"name":"ShinyaOkazawa","email":"fess3idm@gmail.com","commits":1}]},"filePathRelative":"posts/202408112150.md","excerpt":"\\n<p>Vite 環境、VSCode でコーディングするときに、パスの補完がされないと自力で相対パスを書かないといけないので面倒すぎる。</p>\\n<p>必要な設定は2つ。</p>\\n<p>vite 設定 の resolve.alias に解決したいパスを指定。</p>\\n<div class=\\"language-vite.config.mjs line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"vite.config.mjs\\" data-title=\\"vite.config.mjs\\"><pre><code><span class=\\"line\\">export default defineConfig({</span>\\n<span class=\\"line\\">  plugins: [vue()],</span>\\n<span class=\\"line\\">  resolve: {</span>\\n<span class=\\"line\\">    alias: {</span>\\n<span class=\\"line\\">      '@': fileURLToPath(new URL('./src', import.meta.url))</span>\\n<span class=\\"line\\">    }</span>\\n<span class=\\"line\\">  }</span>\\n<span class=\\"line\\">})</span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{o as comp,v as data};
